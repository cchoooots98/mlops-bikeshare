name: Promote_Production

on:
  workflow_dispatch:
    inputs:
      override_model_tar:
        description: "Optional S3 model.tar.gz to promote (leave blank to reuse staging model)"
        required: false
        default: ""

permissions:
  id-token: write                 # REQUIRED for GitHub OIDC → AWS
  contents: read

env:
  # ---- Non-secret configuration pulled from repo Variables ----
  AWS_REGION: ${{ vars.AWS_REGION }}                 # e.g., ca-central-1
  ENDPOINT_NAME: ${{ vars.ENDPOINT_PROD }}           # e.g., bikeshare-prod
  INSTANCE_TYPE: ${{ vars.INSTANCE_PROD }}           # e.g., ml.m5.large (or larger)
  ECR_IMAGE_URI: ${{ vars.ECR_IMAGE_URI }}           # e.g., .../mlflow-pyfunc:3.3.2-v5
  DEFAULT_S3_MODEL_TAR: ${{ vars.S3_MODEL_TAR }}     # default model tar if no override
  # ---- Secrets ----
  SM_EXECUTION_ROLE_Arn: ${{ secrets.SM_EXECUTION_ROLE_Arn }}
  


concurrency:
  group: prod-deploy
  cancel-in-progress: false

jobs:
  promote:
    name: Deploy to SageMaker (prod)
    runs-on: ubuntu-latest
    environment: production   # Protect this environment in GitHub for approvals

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: gh-actions-prod
      
      - name: WhoAmI (debug)
        run: aws sts get-caller-identity

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

            - name: Install deploy deps
        # English: Ensure deploy and smoke scripts can import boto3 etc.
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          python - <<'PY'
          import importlib.util, subprocess, sys
          for pkg in ("boto3","botocore"):
              if importlib.util.find_spec(pkg) is None:
                  subprocess.check_call([sys.executable, "-m", "pip", "install", pkg])
          PY

      - name: Resolve model artifact
        id: resolve
        shell: bash
        run: |
          if [ -n "${{ github.event.inputs.override_model_tar }}" ]; then
            echo "model_tar=${{ github.event.inputs.override_model_tar }}" >> "$GITHUB_OUTPUT"
            echo "Using override model tar"
          else
            echo "model_tar=${DEFAULT_S3_MODEL_TAR}" >> "$GITHUB_OUTPUT"
            echo "Using default model tar from repo variables"
          fi

      - name: Save previous endpoint config (for rollback)
        id: prev
        run: |
          PREV_CFG=$(aws sagemaker describe-endpoint \
            --endpoint-name "${ENDPOINT_NAME}" \
            --query 'EndpointConfigName' --output text 2>/dev/null || echo "NONE")
          echo "prev_config=$PREV_CFG" >> "$GITHUB_OUTPUT"
          echo "PreviousConfig=$PREV_CFG"

      - name: Deploy prod (blue/green)
        run: |
          python pipelines/deploy_via_sagemaker_sdk.py \
            --endpoint-name "${ENDPOINT_NAME}" \
            --role-arn  "${SM_EXECUTION_ROLE_Arn}"\
            --image-uri "${ECR_IMAGE_URI}" \
            --model-data "${{ steps.resolve.outputs.model_tar }}" \
            --instance-type "${INSTANCE_TYPE}" \
            --region "${AWS_REGION}"

      - name: Smoke test prod (use repo script to match schema exactly)
        run: |
          set -euo pipefail
          python test/smoke_invoke.py --endpoint-name "${ENDPOINT_NAME}" --region "${AWS_REGION}"

      - name: Configure AWS (OIDC) for rollback
        if: failure()
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: gh-actions-prod-rollback


      - name: Rollback on failure
        if: failure() && steps.prev.outputs.prev_config != 'NONE'
        run: |
          echo "Smoke test failed — rolling back prod."
          aws sagemaker update-endpoint \
            --endpoint-name "${ENDPOINT_NAME}" \
            --endpoint-config-name "${{ steps.prev.outputs.prev_config }}" \
            --region "${AWS_REGION}"
